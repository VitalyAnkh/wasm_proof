!function(e){self.webpackChunk=function(t,r){for(var o in r)e[o]=r[o];for(;t.length;)n[t.pop()]=1};var t={},n={0:1},r={};var o={3:function(){return{"./web_proof":{__wbindgen_string_new:function(e,n){return t[1].exports.__wbindgen_string_new(e,n)},__wbindgen_json_parse:function(e,n){return t[1].exports.__wbindgen_json_parse(e,n)},__wbindgen_rethrow:function(e){return t[1].exports.__wbindgen_rethrow(e)}}}}};function a(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.e=function(e){var t=[];return t.push(Promise.resolve().then(function(){n[e]||importScripts(e+".worker.js")})),({1:[3]}[e]||[]).forEach(function(e){var n=r[e];if(n)t.push(n);else{var s,i=o[e](),u=fetch(a.p+""+{3:"b847552c7303b1948441"}[e]+".module.wasm");if(i instanceof Promise&&"function"==typeof WebAssembly.compileStreaming)s=Promise.all([WebAssembly.compileStreaming(u),i]).then(function(e){return WebAssembly.instantiate(e[0],e[1])});else if("function"==typeof WebAssembly.instantiateStreaming)s=WebAssembly.instantiateStreaming(u,i);else{s=u.then(function(e){return e.arrayBuffer()}).then(function(e){return WebAssembly.instantiate(e,i)})}t.push(r[e]=s.then(function(t){return a.w[e]=(t.instance||t).exports}))}}),Promise.all(t)},a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a.w={},a(a.s=0)}([function(e,t,n){let r;n.e(1).then(n.bind(null,1)).then(e=>{r=e,postMessage({type:"wasm_loaded"})}),onmessage=(e=>{try{if(!r)throw new Error("Wasm module not loaded yet.");switch(e.data.type){case"generate":var t=new Uint32Array(4);self.crypto.getRandomValues(t);var n=r.generate(t);postMessage({type:e.data.type,result:n});break;case"prove":t=new Uint32Array(4);self.crypto.getRandomValues(t);var o=r.prove(t,e.data.params,e.data.x);postMessage({type:e.data.type,result:o});break;case"verify":var a=r.verify(e.data.params,e.data.proof,e.data.h);postMessage({type:e.data.type,result:a})}}catch(t){postMessage({type:e.data.type,error:t})}})}]);